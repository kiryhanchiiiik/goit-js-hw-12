import{a as g,S as L,i as c}from"./assets/vendor-e5dd2cea.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const u of t.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&o(u)}).observe(document,{childList:!0,subtree:!0});function n(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function o(e){if(e.ep)return;e.ep=!0;const t=n(e);fetch(e.href,t)}})();const b=100,h=async(s,r=1)=>{const e=`https://pixabay.com/api/?key=42410938-e2284def214256f6c05887d1a&q=${s}&image_type=photo&orientation=horizontal&safesearch=true&page=${r}&per_page=${b}`;try{const t=await g.get(e);return console.log(t.data),t.data}catch(t){throw console.error("Error fetching images:",t),t}};let p;function m(s,r){const n=s.map(o=>`
      <li class="gallery-item">
        <a href="${o.largeImageURL}" class="gallery-link">
          <img src="${o.webformatURL}" alt="${o.tags}" />
        </a>
        <div class="info">
          <p class="info-item"><b>Likes</b> ${o.likes}</p>
          <p class="info-item"><b>Views</b> ${o.views}</p>
          <p class="info-item"><b>Comments</b> ${o.comments}</p>
          <p class="info-item"><b>Downloads</b> ${o.downloads}</p>
        </div>
      </li>
      `).join("");r.insertAdjacentHTML("beforeend",n),p?p.refresh():p=new L(".gallery a",{captions:!0,captionsData:"alt",captionsDelay:200})}const f=document.querySelector(".search-form"),d=document.querySelector(".gallery"),a=document.querySelector(".preloader"),i=document.querySelector(".load-more-button");document.querySelector(".gallery-item");i.classList.add("hidden");let y="",l=1;const v=100;f.addEventListener("submit",async s=>{s.preventDefault(),a.style.display="flex";const r=f.elements.searchQuery.value.trim();if(!r){c.error({message:"Please, fill the input",position:"topRight"}),a.style.display="none";return}r!==y&&(y=r,l=1,d.innerHTML="",i.classList.add("hidden"));try{const n=await h(r,l);if(m(n.hits,d),n.hits.length===0){i.classList.add("hidden"),c.error({message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight"}),f.reset();return}else i.classList.remove("hidden")}catch(n){console.log(n),c.error({message:"An error occurred while fetching images. Please try again later.",position:"topRight"})}finally{a.style.display="none"}});function w(){const s=d.querySelector(".gallery-item");return s?s.getBoundingClientRect().height:(console.error("Element not found."),0)}i.addEventListener("click",async()=>{try{i.classList.add("hidden"),a.style.display="flex",a.style.alignItems="flex-end",l+=1;const s=await h(y,l);m(s.hits,d),a.style.display="none",i.classList.remove("hidden"),l*v>=s.totalHits&&(i.classList.add("hidden"),c.info({message:"We're sorry, but you've reached the end of search results.",position:"topRight"})),setTimeout(()=>{const r=w();r>0&&window.scrollBy({top:r*2,behavior:"smooth"})},0)}catch(s){console.log(s),a.style.display="none",i.classList.remove("hidden")}});
//# sourceMappingURL=commonHelpers.js.map
